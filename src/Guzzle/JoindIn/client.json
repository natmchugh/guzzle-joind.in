{
    "name": "Joind In API",
    "baseUrl": "http://api.joind.in/",
    "operations": {
        "EventFilters": {
            "httpMethod": "GET",
            "uri": "",
            "summary": "List of available event lists, sorted in different ways",
            "parameters": {
                "format": {
                    "location": "query",
                    "description": "Output format as JSON or HTML"
                }
            }
        },
        "EventsList": {
            "httpMethod": "GET",
            "uri": "v2.1/events",
            "summary": "List events",
            "parameters": {
                "format": {
                    "location": "query",
                    "description": "Output format as JSON or HTML"
                },
                "resultsperpage": {
                    "location": "query",
                    "description": "How many results to show per page in the results (zero for no pagination)"
                },
                "start": {
                    "location": "query",
                    "description": "Which page number of results to show"
                },
                "verbose": {
                    "location": "query",
                    "description": "Whether to return verbose detail in the results"
                },
                "filter": {
                    "location": "query",
                    "description": "What kind of event list to return"
                }
            },
            "responseClass": "EventsListOutput"
        },
       "EventDetail": {
            "httpMethod": "GET",
            "uri": "v2.1/events/{event_id}",
            "summary": "Information about a single event",
            "parameters": {
                "format": {
                    "location": "query",
                    "description": "Output format as JSON or HTML"
                },
                "verbose": {
                    "location": "query",
                    "description": "Whether to return verbose detail in the results"
                },
                "event_id": {
                    "location": "uri",
                    "description": "ID of the event whose talks should be returned"
                }
            },
            "responseClass": "EventsListOutput"
        },
       "EventComments": {
            "httpMethod": "GET",
            "uri": "v2.1/events/{event_id}/comments",
            "summary": "Show the comments made on an event",
            "parameters": {
                "format": {
                    "location": "query",
                    "description": "Output format as JSON or HTML"
                },
                "resultsperpage": {
                    "location": "query",
                    "description": "How many results to show per page in the results (zero for no pagination)"
                },
                "start": {
                    "location": "query",
                    "description": "Which page number of results to show"
                },
                "verbose": {
                    "location": "query",
                    "description": "Whether to return verbose detail in the results"
                },
                "event_id": {
                    "location": "uri",
                    "description": "ID of the event whose talks should be returned"
                }
            },
            "responseClass": "EventsListOutput"
        },
        "TalksByEvent": {
            "httpMethod": "GET",
            "uri": "v2.1/events/{event_id}/talks",
            "summary": "Show the sessions associated with a particular event",
            "parameters": {
                "format": {
                    "location": "query",
                    "description": "Output format as JSON or HTML"
                },
                "resultsperpage": {
                    "location": "query",
                    "description": "How many results to show per page in the results (zero for no pagination)"
                },
                "start": {
                    "location": "query",
                    "description": "Which page number of results to show"
                },
                "verbose": {
                    "location": "query",
                    "description": "Whether to return verbose detail in the results"
                },
                "event_id": {
                    "location": "uri",
                    "description": "ID of the event whose talks should be returned"
                }
            }
        },
        "AddANewTalk": {
            "httpMethod": "POST",
            "uri": "v2.1/events/{event_id}/talks",
            "summary": "Create a talk on an event",
            "parameters": {
                "event_id": {
                    "location": "uri",
                    "type": "integer",
                    "description": "ID of the event whose talks should be returned"
                },
                "talk_title": {
                    "location": "json",
                    "type": "string",
                    "description": "Title of the talk or session"
                },
                "talk_description": {
                    "location": "json",
                    "type": "string",
                    "description": "Longer description of the talk contents, or talk abstract"
                },
                "start_date": {
                    "location": "json",
                    "type": "string",
                    "description": "Date and time of this talk, in ISO 860 format"
                }
            }
        },
        "TalkDetails": {
            "httpMethod": "GET",
            "uri": "v2.1/talks/{talk_id}",
            "summary": "Show the sessions associated with a particular event",
            "parameters": {
                "format": {
                    "location": "query",
                    "description": "Output format as JSON or HTML"
                },
                "verbose": {
                    "location": "query",
                    "description": "Whether to return verbose detail in the results"
                },
                "talk_id": {
                    "location": "uri",
                    "description": "ID of the talk to show"
                }
            }
        },
        "TalkComments": {
            "httpMethod": "GET",
            "uri": "v2.1/talks/{talk_id}/comments",
            "summary": "Show the comments made on a talk",
            "parameters": {
                "format": {
                    "location": "query",
                    "description": "Output format as JSON or HTML"
                },
                "resultsperpage": {
                    "location": "query",
                    "description": "How many results to show per page in the results (zero for no pagination)"
                },
                "start": {
                    "location": "query",
                    "description": "Which page number of results to show"
                },
                "verbose": {
                    "location": "query",
                    "description": "Whether to return verbose detail in the results"
                },
                "talk_id": {
                    "location": "uri",
                    "description": "ID of the talk to show"
                }
            }
        },
        "AddTalkComment": {
            "httpMethod": "POST",
            "uri": "v2.1/talks/{talk_id}/comments",
            "summary": "Comment on and rate a talk",
            "parameters": {
                "talk_id": {
                    "location": "uri",
                    "type": "integer",
                    "description": "ID of the talk to show"
                },
                "rating": {
                    "location": "json",
                    "type": "integer",
                    "description": "Title of the talk or session"
                },
                "comment": {
                    "location": "json",
                    "type": "string",
                    "description": "Comment on the talk"
                }
            }
        },
        "UserDetail": {
            "httpMethod": "GET",
            "uri": "v2.1/users/{user_id}",
            "summary": "Show the comments made on a talk",
            "parameters": {
                "format": {
                    "location": "query",
                    "description": "Output format as JSON or HTML"
                },
                "verbose": {
                    "location": "query",
                    "description": "Whether to return verbose detail in the results"
                },
                "user_id": {
                    "location": "uri",
                    "description": "ID of the user to be returned"
                }
            }
        },
        "EventsAttendedByUser": {
            "httpMethod": "GET",
            "uri": "v2.1/users/{user_id}/attended",
            "summary": "List of events attended by a particular user",
            "parameters": {
                "format": {
                    "location": "query",
                    "description": "Output format as JSON or HTML"
                },
                "resultsperpage": {
                    "location": "query",
                    "description": "How many results to show per page in the results (zero for no pagination)"
                },
                "start": {
                    "location": "query",
                    "description": "Which page number of results to show"
                },
                "verbose": {
                    "location": "query",
                    "description": "Whether to return verbose detail in the results"
                },
                "user_id": {
                    "location": "uri",
                    "description": "ID of the user to be returned"
                }
            }
        },
        "TalksGivenByUser": {
            "httpMethod": "GET",
            "uri": "v2.1/users/{user_id}/talks",
            "summary": "List of talks that this user is one of the speakers for",
            "parameters": {
                "format": {
                    "location": "query",
                    "description": "Output format as JSON or HTML"
                },
                "resultsperpage": {
                    "location": "query",
                    "description": "How many results to show per page in the results (zero for no pagination)"
                },
                "start": {
                    "location": "query",
                    "description": "Which page number of results to show"
                },
                "verbose": {
                    "location": "query",
                    "description": "Whether to return verbose detail in the results"
                },
                "user_id": {
                    "location": "uri",
                    "description": "ID of the user to be returned"
                }
            }
        }
    },
    "models": {
        "Event" : {
            "type": "object",
            "properties": {
                "name": {
                    "location": "json",
                    "type": "string"
                },
                "start_date": {
                    "location": "json",
                    "type": "string"
                },
                "end_date": {
                    "location": "json",
                    "type": "string"
                },
                "description": {
                    "location": "json",
                    "type": "string"
                },
                "attendee_count": {
                    "location": "json",
                    "type": "string"
                }
            }
        },
        "EventsListOutput": {
            "type": "object",
            "properties" : {
                "meta": {
                    "count" : {
                        "type": "integer",
                        "location": "json"
                    },
                    "this_page" : {
                        "type": "integer",
                        "location": "json"
                    }
                },
                "events" : {
                    "type": "array",
                    "location": "json",
                    "items": {
                        "$ref": "Event"
                    }
                }
            }
        }
    }
}